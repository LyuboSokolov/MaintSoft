@model AllAppTaskQueryModel

@{
    ViewBag.Title = "Task List";
}
<a class="btn btn-success" style="margin-bottom: 10px" asp-area="" asp-controller="AppTask" asp-action="Add">Add Task</a>


<form method="get">
    <div class="row app-task">
        <div class="form-group col-md-3 d-flex justify-content-between status">
            <div class="form-group">
                <label asp-for="Status"></label>
                <select asp-for="Status" class="form-control">
                    <option value="">All</option>
                    @foreach (var stat in Model.AllStatusNames)
                    {
                        <option value="@stat">@stat</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchTerm">Search</label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting">Sorting by date</label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                </select>
            </div>
        </div>
    </div>

    <div class="col-md-3 search-button">
        <div class="form-group mt-4 p-2 search">
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </div>

</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalAppTasksCount /
        AllAppTaskQueryModel.AppTasksPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="AppTask"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Status"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.AppTasks.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="AppTask"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Status"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>


@if (Model.AppTasks.LongCount() == 0)
{
    <div> Not Yet Task</div>
}
else
{


    <partial name="_AppTaskPartial" />
}


